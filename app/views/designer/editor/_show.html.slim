/ Options
- resource_id ||= @resource.id
- resource_type ||= @resource.class.name
- elements ||= (@resource.elements.is_a?(Hash) ? @resource.elements.values : @resource.elements).to_json
/ - spec ||= "Designer::#{resource_type}".constantize::SPEC.to_json
/ - raise Designer.configuration['articles'].inspect
/ - raise resource_name.inspect
/ - raise  Designer.configuration[resource_name][:preview_path].inspect
- spec ||= Designer.configuration[resource_name][:spec]
- resource_path ||= designer_editor_path(id: @resource.id, resource_name: resource_name)
- preview_path ||= designer_preview_path
/ (resource_id: @resource.id, resource_type: @resource.class.name)designer_
- uploads_path ||= images_path(id: @resource.id, resource_name: resource_name)

#app {
    data-resource_id=(resource_id.to_json)
    data-resource_type=(resource_type)
    data-elements=(elements)
    data-spec=(spec)
    data-resource_path=(resource_path)
    data-preview_path=(preview_path)
    data-uploads_path=(uploads_path)
  }

  #sidebar.panel-left
    ul#menu.nav.nav-tabs role="tablist"
      li.nav-item
        a.nav-link.active data-toggle="tab" href="#elements" role="tab" Designer
      li.nav-item
        a.nav-link data-toggle="tab" href="#gallery" role="tab" Images
      = yield(:designer_nav)
      li.nav-item.flex-fill
      li.nav-item
        a.nav-link href="#" @click="refreshPreview()" title="Refresh Preview"
          i class="fa fa-refresh"
      li.nav-item
        a.nav-link href="#" @click="save()" title="Save"
          i class="fa fa-floppy-o"
      li.nav-item
        a :class="{'nav-link': true, active: currentView == 'editor'}" href="#" @click="currentView = 'editor'" rel="editor" title="Editor"
          i class="fa fa-edit"
      li.nav-item
        a :class="{'nav-link': true, active: currentView == 'preview'}"  href="#" @click="currentView = 'preview'" rel="preview" title="Preview"
          i class="fa fa-eye"
    .tab-content
      #elements.tab-pane.fade.show.active
        / @update="refreshPreview()" @change="refreshPreview()"
        .row.align-items-center
          .col-6
            .tab-title.m-0.pl-1 Page Designer
          .col-6.text-right
            .dropdown
              button.btn.btn-sm.btn-success.dropdown-toggle data-toggle="dropdown" type="button" Add Block
              .dropdown-menu
                a.dropdown-item v-for="definition in spec" @click="addElement(definition.template)" href="#"= '{{definition.label}}'
        Draggable v-model="elements" :options="{handle:'.drag-handle'}"
          component {
            :is="item.component || 'DefaultForm'"
            v-for="(item, index) in elements" :key="item.id"
            v-bind:item="item"
            v-bind:spec="getSpec(item.template)"
            v-on:remove="elements.splice(index, 1)" }
      #gallery.tab-pane.fade aria-labelledby="gallery-tab" role="tabpanel"
        component is="ImageGallery" v-bind:uploads_path="uploads_path"
      = yield(:designer_tabs)
  .splitter
  #editor.panel-right v-show="currentView == 'editor'" = yield(:designer_form)
  / height="100%" width="100%" src=(preview_path)
  iframe#preview.panel-right v-show="currentView == 'preview'" height="100%" width="100%" src=(preview_path)
