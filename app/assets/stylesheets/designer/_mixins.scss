@mixin designer-link-color($color: inherit, $hover-color: $link-color) {
  color: $color;

  &:hover {
    color: $hover-color;
    text-decoration: underline;

    svg {
      fill: $hover-color;
    }
  }

  &.active,
  &:active,
  &:focus {
    color: darken($hover-color, $emphasized-link-hover-darken-percentage);
    text-decoration: underline;

    svg {
      fill: darken($hover-color, $emphasized-link-hover-darken-percentage);
    }
  }
}

@mixin designer-text-hover-color($theme) {
  &:hover {
    color: theme-color($theme) !important;
  }

  &.active,
  &:active,
  &:focus {
    color: darken(theme-color($theme), $emphasized-link-hover-darken-percentage) !important;
  }
}

@mixin designer-hover-button(
  $color: theme-color('secondary'),
  $hover-color: $gray-600
) {
  color: $color;
  background: transparent;

  &:hover {
    color: white;
    background-color: $hover-color;
  }

  &:active,
  &.active,
  &:focus {
    color: white;
    background-color: darken($hover-color, $emphasized-link-hover-darken-percentage);
  }
}

@mixin designer-label() {
  font-size: .775rem;
  font-weight: 600;
  line-height: 1.5rem;
}

@mixin flex-fill() {
  flex: 1 1 auto !important; // .flex-fill
}

@mixin flex-shrink() {
  flex: 0 0 auto !important; // .flex-shrink
}

@mixin flex-align($value: center) {
  display: flex !important;
  align-items: $value !important; // .align-items-#{value}
}

@mixin flex-center() {
  display: flex !important;
  align-items: center !important; // .align-items-#{value}
  justify-content: center !important; // .justify-content-#{value}
}

@mixin fill-parent() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0
}

@mixin no-button-outline() {
  &:active,
  &:focus,
  &:hover {
    outline: 0;
  }
}

@mixin truncate() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
